name: GLADOS 自动签到

on:
  schedule:
    - cron: "19 9,10 * * *"  # 每天 UTC 时间 0:00 运行
  workflow_dispatch:     # 允许手动触发
  push:
    paths:
      - 'glados/main.py'  # 当主脚本更新时自动运行，修改路径

# 添加权限配置
permissions:
  contents: write      # 允许推送代码到仓库
  issues: write        # 允许创建Issue
  actions: read        # 允许读取Actions
  
jobs:
  checkin:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # 设置超时时间为10分钟
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true  # 如果有新的运行，取消旧的运行
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'    # 启用 pip 缓存
          cache-dependency-path: 'glados/requirements.txt'  # 指定依赖文件路径
      
      - name: 安装基本依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r glados/requirements.txt
          mkdir -p glados/temp
          playwright -V > glados/temp/playwright_version.txt
          echo 'firefox' >> glados/temp/playwright_version.txt
      
      - name: 尝试恢复 Playwright 缓存
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('glados/temp/playwright_version.txt') }}
          restore-keys: |
            playwright-${{ runner.os }}-
      
      - name: 安装 Playwright 浏览器
        # 如果缓存没命中才安装
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          echo "缓存未命中，安装 Playwright 浏览器..."
          python -m playwright install --with-deps firefox
        
      - name: 运行签到脚本
        run: python glados/main.py
        env:
          GLADOS_EMAIL: ${{ secrets.GLADOS_EMAIL }}
          GLADOS_PASSWORD: ${{ secrets.GLADOS_PASSWORD }}
        timeout-minutes: 5  # 设置脚本运行超时时间
      
      - name: 更新README时间戳
        run: |
          # 获取当前北京时间
          CURRENT_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
          
          # 使用更可靠的方法更新时间戳
          if grep -q "GLADOS 最近更新时间:" README.md; then
            # 如果找到了"GLADOS 最近更新时间:"行，则替换整行
            sed -i "s/GLADOS 最近更新时间:.*/GLADOS 最近更新时间: $CURRENT_TIME/" README.md
          else
            # 如果没找到，则在"GLADOS 最近签到截图"行后添加（使用sed的a命令添加新行）
            sed -i "/## GLADOS 最近签到截图/a\\GLADOS 最近更新时间: $CURRENT_TIME" README.md
          fi
      
      - name: 提交更新的README和截图
        if: always()  # 无论成功或失败都提交更新
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md glados/checkin.png
          git diff --quiet && git diff --staged --quiet || (git commit -m "自动签到 $(date '+%Y-%m-%d')" && git push)
      
      - name: 失败通知
        if: failure()
        uses: actions/github-script@v7
        with:   
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `签到失败: ${new Date().toISOString().split('T')[0]}`,
              body: '自动签到脚本执行失败，请检查日志和配置。',
            })
